{"version":3,"file":"component---src-templates-post-tsx-439fef1ef5955395113a.js","mappings":"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","sources":["webpack://blog/./node_modules/.pnpm/@heroicons+react@2.0.17_react@18.2.0/node_modules/@heroicons/react/24/solid/ChevronLeftIcon.js","webpack://blog/./node_modules/.pnpm/@heroicons+react@2.0.17_react@18.2.0/node_modules/@heroicons/react/24/solid/ChevronRightIcon.js","webpack://blog/./src/components/Seo.tsx","webpack://blog/./src/templates/post.tsx"],"sourcesContent":["const React = require(\"react\");\n\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.72 12.53a.75.75 0 010-1.06l7.5-7.5a.75.75 0 111.06 1.06L9.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nmodule.exports = ForwardRef;","const React = require(\"react\");\n\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16.28 11.47a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 011.06-1.06l7.5 7.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nmodule.exports = ForwardRef;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ntype SeoProps = {\n  title: string;\n  description?: string;\n  lang?: string;\n  children?: React.ReactNode;\n};\n\nconst Seo: React.FC<SeoProps> = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import { graphql, Link } from \"gatsby\";\nimport type { PageProps } from \"gatsby\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/solid\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/Seo\";\n\nimport \"prism-themes/themes/prism-one-light.css\";\n\nexport default ({ data }: any) => {\n  const { previous: prev, next, site, markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <div className=\"prose prose-slate mx-auto\">\n        <header className=\"text-3xl pb-6 font-extrabold\">\n          {post.frontmatter.title}\n        </header>\n        <article dangerouslySetInnerHTML={{ __html: post.html }} />\n        <div className=\"flex justify-between my-12 text-sm\">\n          {prev && (\n            <Link\n              to={prev.fields.slug}\n              className=\"inline-flex items-center min-w-0\"\n            >\n              <ChevronLeftIcon className=\"mr-1 h-4 w-4 group-hover:text-gray-500\" />\n              <span className=\"break-all whitespace-nowrap overflow-hidden overflow-ellipsis\">\n                {prev.frontmatter.title}\n              </span>\n            </Link>\n          )}\n          {next && (\n            <Link\n              to={next.fields.slug}\n              className=\"inline-flex items-center min-w-0\"\n            >\n              <span className=\"break-all whitespace-nowrap overflow-hidden overflow-ellipsis\">\n                {next.frontmatter.title}\n              </span>\n\n              <ChevronRightIcon className=\" ml-1 h-4 w-4 group-hover:text-gray-500\" />\n            </Link>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = ({\n  data: { markdownRemark: post },\n}: PageProps<Queries.BlogPostBySlugQuery>) => {\n  return (\n    <Seo\n      title={post?.frontmatter?.title || \"\"}\n      description={post?.frontmatter?.description || post?.excerpt || \"\"}\n    />\n  );\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["React","ForwardRef","forwardRef","title","titleId","props","svgRef","createElement","Object","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","module","exports","_ref","description","lang","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","___EmotionJSX","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","data","previous","prev","next","markdownRemark","post","Layout","className","frontmatter","dangerouslySetInnerHTML","__html","html","Link","to","fields","slug","ChevronLeftIcon","ChevronRightIcon","Head","_ref2","Seo","_post$frontmatter","_post$frontmatter2","excerpt"],"sourceRoot":""}