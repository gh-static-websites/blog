{"componentChunkName":"component---src-pages-stories-tsx","path":"/stories/","result":{"data":{"allMarkdownRemark":{"totalCount":9,"edges":[{"node":{"id":"1ff05058-4800-5266-b857-c22e505f84a5","frontmatter":{"title":"基于dnd-kit实现Antd Table组件拖拽排序","date":"2022-11-05","category":"JS","tags":["React","Ant Design"]},"fields":{"slug":"/dnd-kit-ant-table/"},"excerpt":"背景 最近业务需求上要求对表格加入拖拽排序功能，由于我们UI组件库基于antd，根据组件库官方文档给出的基于react-dnd、react-sortable-hoc示例，与我们自身业务需求的调研，最后选择react-sortable-hoc…"}},{"node":{"id":"68502b3a-c30f-5e80-abcf-1a5512901207","frontmatter":{"title":"React 组件生命周期","date":"2018-07-12","category":"React","tags":["React","JSX","javascript"]},"fields":{"slug":"/react-component-lifecycle/"},"excerpt":"装载(首次实例化) constructor() static getDerivedStateFromProps() render() componentDidMount() 更新(组件已存在时的状态改变) static getDerivedStateFromProps…"}},{"node":{"id":"9ae37095-3590-5b6e-80b8-9f17f3cfc51d","frontmatter":{"title":"文本域光标定位","date":"2018-06-10","category":"Javascript","tags":["Javascript","HTML"]},"fields":{"slug":"/cursor-position/"},"excerpt":"在应用中某些场景下，我们会涉及到对表单元素与或者是带有属性的元素，设置自动获取焦点。在这些元素没有内容的情况下那么设置焦点非常容易，然而现实情况往往总是与众不同。那么在遇到这些需求我们该如何做呢？ Input&TextArea Contenteditable"}},{"node":{"id":"0c971d77-1195-5d9b-be83-60feb74f1459","frontmatter":{"title":"利用CANVAS生成缩略图","date":"2018-05-10","category":"Javascript","tags":["Javascript","HTML5","Canvas"]},"fields":{"slug":"/thumbnail-generator/"},"excerpt":"HTML CSS JS"}},{"node":{"id":"601e7104-d851-5189-9316-af727ad9430f","frontmatter":{"title":"表单元素复选框与单选框视觉优化","date":"2018-03-05","category":"CSS","tags":["CSS","Javascript"]},"fields":{"slug":"/checkbox-beautify/"},"excerpt":"谈起表单元素在各浏览器上的表现形式，相信各位前端开发者与 UI 设计师都比较头疼，尤其是 checkBox、radio 以及 select 这三种表单元素展现各异。有时候我们为了效率不得不牺牲 UI 效果，那么有什么方法可以在保障效率的情况下，实现功能并达到与 UI…"}},{"node":{"id":"bc4ef9b3-12d0-5a9f-81b9-fe53c7353bfc","frontmatter":{"title":"CSS3自主义浏览器滚动条","date":"2017-05-05","category":"CSS","tags":["CSS","CSS3","JavaScript","Plugs"]},"fields":{"slug":"/custom-cssScrollBar/"},"excerpt":"由于平台不同，或用户采用的浏览器不同，或因同浏览器版本不同，都或多或少存在一定的差别，造成与 UI 设计图有一定的差别，影响用户视觉体验。那么目前这类问题常采用的方法都有那些嗯？ 纯 CSS 样式 由 CSS 样式来定义浏览器滚动条涉及到几条 CSS…"}},{"node":{"id":"29625919-5f80-5b4a-bf6e-558fb19b05cb","frontmatter":{"title":"元素居中排版","date":"2017-05-05","category":"CSS","tags":["CSS"]},"fields":{"slug":"/css-centered/"},"excerpt":"在前端开发切片布局中我们常常会遇到各种元素 水平、垂直、水平垂直居中显示的的场景，其中 水平居中 是相对简单，而 垂直居中则相应要麻烦些。 水平居中 对于行类元素如 span、label、em,small 等元素来说水平居中一般采用方式为：，的方式来解决。而块级如：div…"}},{"node":{"id":"47b1e163-4423-5276-abba-c9d99ae52403","frontmatter":{"title":"CSS3选择器之nth-child","date":"2016-05-05","category":"CSS","tags":["CSS"]},"fields":{"slug":"/css3-nth-child/"},"excerpt":"在我们对一组相同元素作不同表现形式的操作时，在还没有选择器与时，我们常用到的方法可能是利用 JS 来控制表现形式，或者采用 CSS 选择器类处理这类问题。 我们需要在 HTML…"}},{"node":{"id":"afa5b95c-53b5-5d95-ae80-62977548b9bc","frontmatter":{"title":"正则表达式","date":"2015-05-05","category":"Javascript","tags":["正则","RegExp"]},"fields":{"slug":"/RegExp/"},"excerpt":"以下正则表达式均从各博客收集整理得来，目前还未作测试，请谨慎使用，若有错误麻烦各位及时反馈给我！\n联系方式：whenhan@foxmail.com 正则工具 regexbuddy WEB 前端助手（FeHelper…"}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","3159585216"],"slicesMap":{}}