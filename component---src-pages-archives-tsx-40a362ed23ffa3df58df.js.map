{"version":3,"file":"component---src-pages-archives-tsx-40a362ed23ffa3df58df.js","mappings":"0MAQA,UAAeA,IAI8B,IAH3CC,MACEC,mBAAmB,MAAEC,KAEc,GACrCC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,KAAeC,OAAO,gBAAiB,CACrCC,MAAO,IACPC,SAAU,SACVC,OAAO,EACPC,OAAQ,QACRC,SAAU,UAEL,MACLN,EAAAA,EAAAA,KAAeO,SAAS,IAEzB,IAGH,MAOMC,EAPQC,MAAMC,KAClB,IAAIC,IACFb,EAAMc,KAAIC,IAAoB,IAAnB,KAAEC,GAAW,EACtB,OAAOA,EAAKC,YAAYC,KAAKC,MAAM,KAAK,EAAE,MAIzBL,KAAKM,IACnB,CACLA,OACApB,MAAOA,EAAMqB,QAAOC,IAAAA,IAAC,KAAEN,GAAW,SAChCA,EAAKC,YAAYC,KAAKK,SAASH,EAAK,QAK1C,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAM,UACJf,EAASI,KAAIY,IAAAA,IAAC,KAAEN,EAAI,MAAEpB,GAAY,SACjCwB,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,WACPC,EAAAA,EAAAA,MAAAA,KAAAA,CAAIC,GAAG,eAAeC,UAAU,OAAM,WACpCN,EAAAA,EAAAA,KAAAA,KAAAA,CAAIM,UAAU,gBAAe,SAAEV,IAC9BpB,EAAMc,KAAIiB,IAAAA,IAAC,KAAEf,GAAW,SACvBY,EAAAA,EAAAA,MAAAA,KAAAA,CAAkBE,UAAU,YAAW,WACrCN,EAAAA,EAAAA,KAAAA,OAAAA,CAAMQ,MAAO,CAAEC,YAAa,GAAI,SAAEjB,EAAKC,YAAYC,QACnDM,EAAAA,EAAAA,KAACU,EAAAA,KAAI,CAACC,GAAInB,EAAKoB,OAAOC,KAAK,SAAErB,EAAKC,YAAYqB,UAFvCtB,EAAKa,GAGT,QAPIT,EAUJ,KAIlB,EAEM,MAAMmB,EAAO,KAAMf,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACF,MAAM,M","sources":["webpack://blog/./src/pages/archives.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\n\nimport ScrollReveal from \"scrollreveal\";\nimport { graphql, Link } from \"gatsby\";\nimport type { PageProps } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport Layout from \"../components/Layout\";\n\nexport default ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: PageProps<Queries.ArchivesPageQuery>) => {\n  useEffect(() => {\n    ScrollReveal().reveal(\"#archive-item\", {\n      delay: 500,\n      useDelay: \"onload\",\n      reset: true,\n      origin: \"right\",\n      distance: \"120px\",\n    });\n    return () => {\n      ScrollReveal().destroy();\n    };\n  }, []);\n\n  // 计算出年段区间\n  const years = Array.from(\n    new Set(\n      edges.map(({ node }: any) => {\n        return node.frontmatter.date.split(\"-\")[0];\n      })\n    )\n  );\n  const nextData = years.map((year) => {\n    return {\n      year,\n      edges: edges.filter(({ node }: any) =>\n        node.frontmatter.date.includes(year)\n      ),\n    };\n  });\n\n  return (\n    <Layout>\n      {nextData.map(({ year, edges }: any) => (\n        <Fragment key={year}>\n          <dl id=\"archive-item\" className=\"mb-8\">\n            <dt className=\"text-3xl mb-4\">{year}</dt>\n            {edges.map(({ node }: any) => (\n              <dd key={node.id} className=\"ml-8 mb-4\">\n                <span style={{ marginRight: 8 }}>{node.frontmatter.date}</span>\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n              </dd>\n            ))}\n          </dl>\n        </Fragment>\n      ))}\n    </Layout>\n  );\n};\n\nexport const Head = () => <Seo title=\"归档\" />;\n\nexport const query = graphql`\n  query ArchivesPage {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","data","allMarkdownRemark","edges","useEffect","ScrollReveal","reveal","delay","useDelay","reset","origin","distance","destroy","nextData","Array","from","Set","map","_ref2","node","frontmatter","date","split","year","filter","_ref3","includes","_jsx","Layout","_ref4","Fragment","_jsxs","id","className","_ref5","style","marginRight","Link","to","fields","slug","title","Head","Seo"],"sourceRoot":""}